generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Panel {
  id        Int     @id @default(autoincrement())
  direction String
  linktext  String
  linkhref  String
  excerpt   String
  title     String  @unique
  photos    Photo[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  loggedIn  Boolean  @unique @default(false)
  name      String?
  address   String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Carts      Cart[]
  UserTokens UserTokens[]
}

model Cart {
  id       String  @id @default(uuid())
  isActive Boolean @default(false)

  CartItems CartItem[]
  userId    String?
  user      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserTokens {
  id           String   @id @default(uuid())
  refreshToken String
  family       String   @unique
  browserInfo  String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Photo {
  id      String    @id @default(uuid())
  height  Int
  width   Int
  url     String
  alt     String
  Product Product[]
  Panel   Panel[]
}

model Product {
  id                 String     @id @default(uuid())
  name               String     @unique
  urlName            String     @unique
  basePrice          Float
  discountPercentage Int        @default(0)
  stock              Int        @default(0)
  description        String?
  createdAt          DateTime   @default(now())
  photos             Photo[]
  categories         Category[]
  CartItem           CartItem[]
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model CartItem {
  id            String   @id @default(uuid())
  name          String   @unique
  amount        Int
  totalPrice    Decimal?
  reviewNote    Int?
  reviewComment String?
  createdAt     DateTime @default(now())

  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String?  @unique
  Cart      Cart?    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String?
}

enum Role {
  USER
  ADMIN
}
